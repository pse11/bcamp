package com.test01;

public class ArrayTest01 {
	public void testArray1() {
		/*
		//배열 사용 하는 이유
		int num1 = 10;
		int num2 = 20;
		int num3 = 30;
		int num4 = 40;
		int num5 = 50;
		
		int sum = 0;
		sum += num1;
		sum+=num2;
		sum+=num3;
		sum+=num4;
		sum+=num5;
		//하나씩 이렇게 작성해야 하는 불편함이 있음
		 *
		 */
		int[] arr = new int[5]; //배열 선언
		
		//arr[0]=10; //배열에 값 저장
		//arr[1] = 20;
		//arr[2]=30;
		
		//for을 사용한 배열 초기화
		for(int i=0;i<arr.length;i++) {
			arr[i] = (i+1)*10;
		}
		int sum=0;
		for(int i=0;i<arr.length;i++) {
			sum+=arr[i];
		}
	}
	public void testArray2() {
		//배열 사용 방법
		//배열 선언
		//선언은 stack영역에 배열의 주소를 보관할 수 있는 공간을 만드는 것.
		//자료형[] 변수명;
		//자료형 변수명[];
		//int[] iarr;
		//char[] carr;
		
		//할당
		//new 타입[크기]; heap 영역에 방 3개짜리 공간이 만들어진다. 그 공간의 만들어진 주소값을 변수에 저장해줘야한다.
		//iarr = new int[3]; //자바는 힙 영역에 누군가 참종안한 특정 변수가 있으면 사라진다. 그래서 변수에 할당시켜 줘야함
		//new 연산자는 heap 영역에 공간을 할당하고 발생한 주소값을 반환하는 연산자
		//참조형 변수(iarr)에 대입. 실제로 메모리 공간을 참조하면서 접근가능
		//iarr = new int[]; //크기를 적어줘야함.
		
		//int size= 5;
		//iarr = new int[size];
		
		//선언과 할당
		int[] iarr = new int[5];
		char carr[] = new char[10];
		
		System.out.println("iarr: "+iarr);
		System.out.println("carr: " + carr);
		
		System.out.println("iarr의 hashcode: " +iarr.hashCode());
		System.out.println("carr의 hashcode: "+carr.hashCode());
		//실제적인 주소를 찾아갈수있는 키: hashcode
		
		String s = "a";
		System.out.println(s.hashCode());
		//new사용 : 새롭게 힙에 공간이 생긴다. 
		
		System.out.println("iarr의 길이: " + iarr.length); //length() : 문자열(String)의 길이
		System.out.println("carr의 길ㅇ: " + carr.length); //length: 배열의 길이
		
	}
}
